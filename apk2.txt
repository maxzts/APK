#include "stdio.h"
#include "windows.h"
#include "time.h"
#include<stdlib.h>

void main(void)
{
	const short x = 16;
	short matr[x][x];
	short cnt = 16; 
	int res = 0, res1 = 0;
	double r;
	time_t start, end, Time1, Time2;
	int times = 10000000;
	int i, j, c,temp, sum = 0;

	for (i=0; i<x; i++)
	{
		for (j = 0; j < x; j++) {
			matr[i][j] = rand()%100;
		}
	}


    // Заметить время ...
	start = clock();

	// Многократный прогон кода с MMX ...
	for  (c=0; c<times; c++)
    {
    cnt = x*x;
    __asm
	    {
		pusha
		xor     esi, esi

		pxor    MM7, MM7
loop1:
		movq    MM0, matr[esi]
		movq    MM1, matr[esi]
        pmaddwd MM0, MM1
		paddd   MM7, MM0
		add     esi, 8
		sub     cnt, 4
		jnz     loop1

		movq    MM0, MM7
		psrlq   MM7, 32
		paddd   MM7, MM0
		movd    res, MM7
		emms
		popa
	}
	}
	end = clock();
	printf("\n Using MMX ...\n");
	printf("\nResult = %d", res);
	Time1 = (end - start);
	printf("\nTime elapsed = %f s\n", (double) Time1/CLOCKS_PER_SEC);

 // Заметить время ...
	start = clock();

 // Многократный прогон кода без MMX ...
	for  (c=0; c<times; c++)
    {
    cnt = x*x;
	__asm
	{
		pusha
		xor     esi, esi

		xor     ecx, ecx
loop2:
		mov     ax,	 matr[esi]    //   Чтение из памяти 
		mov     bx,  matr[esi]    
        imul    ax,  bx
		add     ecx,  eax
		add     esi, 2
		sub     cnt, 1
		jnz     loop2
        
		mov     res1, ecx 
		popa
	}
	}
	end = clock();
	printf("\n Without MMX ...\n");
	printf("\nResult1 = %d", res1);
	Time2 = (end - start);
	printf("\nTime elapsed = %f s\n", (double)Time2/CLOCKS_PER_SEC);

	start = clock();

	// Многократный прогон кода Си
	for  (c=0; c<times; c++)
    {
		sum = 0;
		for (i = 0; i < x; i++) {
			for(j = 0; j < x; j++) {
				temp = matr[i][j];
				temp *= temp;
				sum+=temp;
			}
		}
	}
	end = clock();
	printf("\n Using C ...\n");
	printf("\nResult = %d", sum);
	printf("\nTime elapsed = %f s\n", (double) (end - start)/CLOCKS_PER_SEC);

	system("pause");
}
